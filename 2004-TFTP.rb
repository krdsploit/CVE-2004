##
# This file is part of the Metasploit Framework and may be subject to 
# redistribution and commercial restrictions. Please see the Metasploit
# Framework web site for more information on licensing and terms of use.
# http://metasploit.com/framework/
##




#Code By Krd-Pentester

require 'ftpd'

require 'msf/core'

require 'tmpdir'


require 'reversed'


class MetasploitModule < Msf::Auxiliary
	include Msf::Exploit::Remote:TFTPServer
	include Msf::Auxiliary::Report



	def initialize
		super(





			'Name' => 'TFP File Server',
			'Description' => %q{



				The TFTP protocol server has been known as cve 2004 , and it is a long time no updates , are available for this exploit ,
				like a kurdish pentester i started to add something new to this exploit .

				Hello 2004 now is 2022 :)



			},

			'Author' => ['Jduck', 'Todb'],
			'Updater & Rewriter' => ['Krd-Pentester'],
			'License' => MSF_LICENSE,
			'Actions' => [


					['Service','Server Starting','Version','Port','Verbose','Address']


			],


			'PassiveActions' => 

			[


				'Service'


			],




			)

		register_option([


			 OptAddress.new('SRVHOST',   [ true, "The local host to listen on.", '0.0.0.0' ]),
       		 OptPort.new('SRVPORT',      [ true, "The local port to listen on.", 69 ]),
       		 OptPath.new('TFTPROOT',   [ true, "The TFTP root directory to serve files from", Dir.tmpdir  ]),
       		 OptPath.new('OUTPUTPATH', [ true, "The directory in which uploaded files will be written.", Dir.tmpdir ])
       		 OptPath.new('FILESYSTEM', [true, "The file system object that the driver supplies to Ftpd is Ftpd's gateway to the logical file system", Dir.tmpdir])
       		 OptPath.new('LOOKUP', [true, "The IP Look UP ",tmpdir])
       		 OptPath.new('LISTINFO', [true, "The File Info",tmpdir])
       		 OptPath.new('CREATE', [true, "Create The New File",tmpdir])
		]),	 



	end


	def srvhost
		datastore['SRVHOST'] || '0.0.0.0'
	end


	def srvport
		datastore['SRVPORT'] || 69

	end


	def fsystem
		datastore['FILESYSTEM'] || Ftpd::DiskFileSystem.new(tmpdir)
	end

	def lkup
		datastore['LOOKUP'] || Reversed.lookup(tmpdir)
	end


	def finfo
		datastore['LISTINFO'] || Ftpd::DiskFileSystem::List
	end


	def file
		datastore['CREATE'] || Ftpd::DiskFileSystem::Mkdir

	end

	







	def run
		print_status("Starting TFTP Server On #{srvhost}:#{srvport} :) ")


		@tftp = Rex::Proto::TFTP:Server.new(


			srvport,
			srvhost,
			{}


		)


		




		@tftp.set_tftproot(datastore['TFTPROOT'])
    	print_status("Files will be served from #{datastore['TFTPROOT']}")

   		@tftp.set_output_dir(datastore['OUTPUTPATH'])
    	print_status("Uploaded files will be saved in #{datastore['OUTPUTPATH']}")

   		@tftp.start
   		add_socket(@tftp.sock)

    	while @tftp.thread.alive?
     		 sleep 3
    	end

    	vprint_status("Stopping TFTP server")
   		@tftp.stop
   	end
   end
 


			





